
x-service-base: &service-base
  build:
    context: .
  env_file:
    - .env
  depends_on:
    alembic: 
      condition: service_started
    postgres: 
      condition: service_started
    rabbitmq:
      condition: service_healthy

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  backend:
    <<: *service-base
    command: bash -c "uvicorn services.backend.main:app --host 0.0.0.0 --port 8000 --workers ${BACKEND_WORKERS_COUNT}"
    ports:
      - "8000:8000"
    depends_on:
      redis: 
        condition: service_started
    profiles:
      - with_backend

  bot:
    <<: *service-base
    command: python -m services.bot
    profiles:
      - with_bot

  fill_db:
    <<: *service-base
    command: python -m services.fill_db
    depends_on:
      alembic: 
        condition: service_started

  alembic:
    build:
      context: .
    command: alembic upgrade head
    restart: no
    env_file:
      - .env
    depends_on:
      - postgres

  frontend:
    build:
      context: ./services/frontend
    env_file:
      - .env
    profiles:
      - with_frontend

  nginx:
    image: nginx:latest
    volumes:
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx/
    depends_on:
      frontend:
        condition: service_started
    profiles:
      - with_frontend

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
