"""first migration

Revision ID: 9d33282af21c
Revises: 
Create Date: 2024-11-30 03:56:08.953140

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9d33282af21c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('servers',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('ip', sa.String(), nullable=False),
    sa.Column('country_code', sa.String(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('closing_date', sa.DateTime(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('telegram_username', sa.String(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'guest', 'member', name='role'), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('auto_pay', sa.Boolean(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('secret', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=True)
    op.create_table('panel_servers',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('panel_path', sa.String(), nullable=False),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('vless_id', sa.Integer(), nullable=False),
    sa.Column('vless_port', sa.Integer(), nullable=False),
    sa.Column('vless_domain_short_id', sa.String(), nullable=False),
    sa.Column('vless_reality_id', sa.Integer(), nullable=False),
    sa.Column('vless_reality_port', sa.Integer(), nullable=False),
    sa.Column('vless_reality_domain_short_id', sa.String(), nullable=False),
    sa.Column('vless_reality_public_key', sa.String(), nullable=False),
    sa.Column('vless_reality_private_key', sa.String(), nullable=False),
    sa.Column('vmess_id', sa.Integer(), nullable=False),
    sa.Column('vmess_port', sa.Integer(), nullable=False),
    sa.Column('vmess_domain_short_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['servers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('servers_and_users',
    sa.Column('server_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('vless_id', sa.Uuid(), nullable=False),
    sa.Column('vless_reality_id', sa.Uuid(), nullable=False),
    sa.Column('vmess_id', sa.Uuid(), nullable=False),
    sa.Column('http_id', sa.Integer(), nullable=False),
    sa.Column('socks_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['server_id'], ['servers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('server_id', 'user_id')
    )
    op.create_table('telegram_messages',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('sender_id', sa.Uuid(), nullable=False),
    sa.Column('recipient_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tg_bot_tokens',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('server_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['server_id'], ['servers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tickets',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('holder_id', sa.Uuid(), nullable=False),
    sa.Column('opening_date', sa.DateTime(), nullable=False),
    sa.Column('closing_date', sa.DateTime(), nullable=False),
    sa.Column('is_open', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['holder_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('type', sa.Enum('refund', 'replenishment', 'withdrawal', name='transactiontype'), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('active_periods',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('transaction_id', sa.Uuid(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ticket_messages',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('type', sa.Enum('from_admin', 'from_user', name='messagetickettype'), nullable=False),
    sa.Column('ticket_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ticket_messages')
    op.drop_table('active_periods')
    op.drop_table('transactions')
    op.drop_table('tickets')
    op.drop_table('tg_bot_tokens')
    op.drop_table('telegram_messages')
    op.drop_table('servers_and_users')
    op.drop_table('panel_servers')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('servers')
    # ### end Alembic commands ###
